rule
{
  id "BEACONs should be signed by Node's (Car & Rsu) key"
  for data
  filter
  {
    type name
    regex ^<localhop><beacon><>*$
  }
  checker
  {
    type customized
    sig-type rsa-sha256
    key-locator
    {
      type name
      hyper-relation
      {
        k-regex ^([^<KEY>]*)<KEY><>$
        k-expand \\1
        h-relation equal
        p-regex ^<localhop><beacon>(<>*)$
        p-expand \\1
      }
    }
  }
}

rule
{
  id "ITS data messages should be signed by RSU's key"
  for data
  filter
  {
    type name
    regex ^<service><its><>*$
  }
  checker
  {
    type customized
    sig-type rsa-sha256
    key-locator
    {
      type name
      
      regex ^<ufba><RSU><><KEY><>$
    }
  }
}

rule
{
  id "Node's key should be signed by DoT (Department of Transportation) key"
  for data
  filter
  {
    type name
    regex ^([^<KEY>]*)<KEY><><><>$
  }
  checker
  {
    type customized
    sig-type rsa-sha256
    key-locator
    {
      type name
      
      regex ^<DoT><KEY><>$
    }
  }
}

trust-anchor
{
  type file
  file-name "../config/rootCert.crt"
}